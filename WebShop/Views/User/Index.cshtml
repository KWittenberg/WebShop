@*@using Microsoft.AspNetCore.Mvc.TagHelpers*@
@*@model WebShop.Models.ViewModel.ApplicationUserViewModel*@
@*@inject UserManager<ApplicationUser> UserManager
@inject ICustomerService customerService*@
@{
    //var user = await UserManager.GetUserAsync(User);
    //var address = await customerService.GetAddress(user.Id);
    int counter = 1;
}

<br />
<br />
<h1>ApplicationUser</h1>
<br />

<div class="card">
    <div class="card-body p-0">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th style="width: 3%">#</th>
                    <th style="width: 15%">User</th>
                    <th style="width: 5%">Role</th>
                    <th style="width: 10%">Phone</th>
                    <th style="width: 15%">Email</th>
                    <th style="width: 10%">Location</th>
                    <th style="width: 10%">Total</th>
                    <th style="width: 10%">Created</th>
                    <th style="width: 18%"><a asp-controller="ApplicationUser" asp-action="Create" class="btn btn-block btn-secondary btn-sm"><i class="bi bi-plus-circle"></i> &nbsp; Add New</a></th>
                </tr>
            </thead>
            <tbody>
                @*@foreach (var item in Model)*@
                {
                    <tr>
                        <td>counter</td>
                        <td>item.FirstName item.LastName</td>
                        <td>item.Role</td>
                        <td>item.PhoneNumber</td>
                        <td>item.Email</td>
                        <td>address.Country</td>
                        <td>0,00 Kn</td>
                        <td>item.Id</td>
                        <td>
                            @*@Html.ActionLink("D", "Details", new {  id=item.Id  },new {@class= "btn btn-danger"})
                            <a asp-controller="User" asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary btn-sm"><i class="bi bi-eye"></i></a>
                            <form asp-action="Delete" asp-route-userId="@item.Id">
                                <a asp-action="Edit" asp-route-userId="@item.Id" class="btn btn-info btn-sm text-white" style="cursor:pointer">Edit</a>
                                <a asp-action="ManageUserClaims" asp-route-userId="@item.Id" class="btn btn-primary btn-sm text-white" style="cursor:pointer">Claims</a>
                                @if (item.LockoutEnd == null || item.LockoutEnd < DateTime.Now)
                                {
                                    //we want to show them the option to lock
                                    <button asp-action="LockUnlock" asp-route-userId="@item.Id" class="btn btn-success btn-sm text-white" style="cursor:pointer"><span>&nbsp; Lock &nbsp;</span></button>
                                }
                                else
                                {
                                    //we want to show them the option to unlock
                                    <button asp-action="LockUnlock" asp-route-userId="@item.Id" class="btn btn-warning btn-sm text-white" style="cursor:pointer"><span>UnLock</span></button>
                                }
                                <button type="submit" onclick="return confirm('Are you sure you want to delete this?')" class="btn btn-danger btn-sm">X</button>
                            </form>*@
                        </td>
                    </tr>
                    counter++;
                }
            </tbody>
        </table>
    </div>
</div>

@await Html.PartialAsync("_CreateItem", "User")